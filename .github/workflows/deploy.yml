name: Déployer sur Heroku (sans Docker)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}

    steps:
      - name: Extraire le code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Récupérer tout l'historique Git

      - name: Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  

      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Installer Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku --version
      - name: Authentification Heroku
        run: echo "${{ secrets.HEROKU_API_KEY }}" | heroku auth:token

      - name: Configurer les informations d'identification Git pour Heroku
        run: |
          git config --global user.email "${{ secrets.HEROKU_EMAIL }}"
          git config --global user.name "SatouMaodo"  # Ou votre nom d'utilisateur GitHub

      - name: Ajouter le dépôt distant Heroku  
        run: git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git

      - name: Exécuter les tests
        run: pytest  # Exécutez vos tests avec pytest

      - name: Déployer sur Heroku (seulement si les tests réussissent)
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        if: ${{ success() }} # Condition pour exécuter le déploiement uniquement si les tests réussissent
