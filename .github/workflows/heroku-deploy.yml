name: Deploy to Heroku

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }} 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
          pip install mlflow
          pip install pyngrok 

      - name: Install Heroku CLI
        run: |
          sudo snap install --classic heroku
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Login to Heroku
        run: |
          unset HEROKU_API_KEY
          heroku login -i
          export HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }}

      - name: Set Heroku git remote
        run: heroku git:remote -a ${{ env.HEROKU_APP_NAME }}

      - name: Start ngrok tunnel
        run: |
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          ngrok http 5313
          export MLFLOW_TRACKING_URI=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI"
          heroku config:set MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI -a ${{ env.HEROKU_APP_NAME }}
      
      - name: Deploy
        run: |
          git push heroku HEAD:main
